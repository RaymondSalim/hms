name: Tag and Create Version Environment on Merge to Prod

on:
  pull_request:
    types: [closed]
    branches:
      - prod

jobs:
  tag_and_version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    concurrency:
      group: version-prod
      cancel-in-progress: false

    steps:
      - name: Checkout prod
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: prod
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Ensure we are up-to-date with origin/prod
        run: |
          git fetch --prune --tags origin
          # Recreate local prod from remote (no hidden merges)
          git checkout -B prod origin/prod
          git pull --ff-only origin prod

      - name: Extract Tag from PR title
        id: extract_tag
        shell: bash
        run: |
          title="${{ github.event.pull_request.title }}"
          if [[ "$title" =~ ^[Rr]elease[[:space:]]+(.+)$ ]]; then
            tag="${BASH_REMATCH[1]}"
            # Basic safety: strip spaces
            tag="${tag//[[:space:]]/}"
            echo "tag_name=$tag" >> "$GITHUB_ENV"
            echo "tag=$tag" >> "$GITHUB_OUTPUT"
            echo "Tag to create: $tag"
          else
            echo "PR title doesn't match 'Release <tag>' pattern. Skipping."
          fi

      - name: Create public/version.json (included in tag)
        if: env.tag_name != ''
        run: |
          mkdir -p public
          printf '{\n  "version": "%s"\n}\n' "${{ steps.extract_tag.outputs.tag }}" > public/version.json
          echo "Created public/version.json:"
          cat public/version.json

      - name: Commit version.json (no-op if unchanged)
        if: env.tag_name != ''
        run: |
          git config user.email "action@github.com"
          git config user.name  "GitHub Action"
          git add public/version.json
          git commit -m "chore: set version to ${{ steps.extract_tag.outputs.tag }}" || echo "No changes to commit"

      - name: Push commit to prod
        if: env.tag_name != ''
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=accept-new -o IdentitiesOnly=yes"
        run: |
          # Only push if we're ahead
          git fetch origin prod
          if ! git diff --quiet origin/prod..HEAD; then
            git push origin HEAD:prod
          else
            echo "No new commit to push"
          fi

      - name: Create tag at current prod (skip if exists)
        if: env.tag_name != ''
        shell: bash
        run: |
          set -euo pipefail
          tag="${{ env.tag_name }}"
          git fetch --tags origin
          if git rev-parse -q --verify "refs/tags/$tag" >/dev/null 2>&1 \
             || git ls-remote --exit-code --tags origin "$tag" >/dev/null 2>&1; then
            echo "Tag '$tag' already exists. Skipping."
            exit 0
          fi
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          # Annotated tag (better metadata)
          git tag -a "$tag" -m "Release $tag"
          git push origin "$tag"
